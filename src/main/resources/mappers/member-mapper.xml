<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

<resultMap id="memberResultSet" type="Member">
	<id property="id" column="ID"/>
	<result property="pwd" column="PWD"/>
	<result property="name" column="NAME"/>
	<result property="email" column="EMAIL"/>
	<result property="email_cert" column="EMAIL_CERT"/>
	<result property="nickname" column="NICKNAME"/>
	<result property="user_lv" column="USER_LV"/>
	<result property="tchr_upload" column="TCHR_UPLOAD"/>
	<result property="tchr_cert" column="TCHR_UPLOAD"/>
	<result property="loginok" column="TCHR_UPLOAD"/>
	<result property="birthday" column="BIRTHDAY"/>
	<result property="gender" column="GENDER"/>
	<result property="phone" column="PHONE"/>
	<result property="enroll_date" column="ENROLL_DATE"/>
	<result property="update_date" column="UPDATE_DATE"/>
	<result property="m_status" column="M_STATUS"/>
	<result property="bank_acct" column="BANK_ACCT"/>
	<result property="avatar" column="AVATAR"/>
	<result property="rename_avatar" column="RENAME_AVATAR"/>
	<result property="bank" column="BANK"/>
	<result property="original_resume" column="ORIGINAL_RESUME"/>
	<result property="rename_resume" column="RENAME_RESUME"/>
</resultMap>

  	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
  	SELECT *
  	  FROM MEMBER
  	 WHERE ID=#{id}
  	   AND M_STATUS='Y' 
  	</select>

	<insert id="insertMember" parameterType="Member" >
	INSERT
	  INTO MEMBER
		<!-- <if test="user_lv == 1">  -->
			VALUES ( #{id}, #{pwd}, #{name}, #{email}, default, #{nickname} 
		   		   , #{user_lv} ,default, default, default, #{birthday}, #{gender}
		           , #{phone}, sysdate, sysdate, default, #{bank_acct}, #{avatar}, #{rename_avatar}
		           , #{bank}, #{original_resume}, #{rename_resume}
		           )
	<!--   </if>
	    <if test="user_lv == 2">
	    	VALUES ( #{id}, #{pwd}, #{name}, #{email}, default, #{nickname} 
		   		   , default ,default, default, default, #{birthday}, #{gender}
		           , #{phone}, sysdate, sysdate, default, #{bank_acct} )
	    </if>  -->
    </insert>  	   
    
   <!--  <insert id="insertTeMember" parameterType="Member">
    INSERT
	  INTO MEMBER
		<if test="user_lv == 1"> 
			VALUES ( #{id}, #{pwd}, #{name}, #{email}, default, #{nickname} 
		   		   , default ,default, default, default, #{birthday}, #{gender}
		           , #{phone}, sysdate, sysdate, default, #{bank_acct})
    </insert> -->
    
    <update id="updateMember" parameterType="Member">
    	UPDATE MEMBER
    	   SET EMAIL=#{email}
    	     , PWD=#{pwd}
    	     , PHONE=#{phone}
    	     , UPDATE_DATE= sysdate
    	     , avatar = #{avatar}
    	     , rename_avatar = #{rename_avatar}
    	     , original_resume = #{original_resume}
    	     , rename_resume = #{rename_resume}
    	     , bank = #{bank}
    	     , bank_acct = #{bank_acct}
    	 WHERE ID = #{id}
    </update>
    
    <update id="deleteMember" parameterType="String">
    	UPDATE MEMBER
    	   SET M_STATUS='N'
    	 WHERE ID=#{id}
    </update>
    
    <select id="idCheck" parameterType="string" resultType="_int">
    	SELECT
    		COUNT(*)
    	  FROM MEMBER
    	 WHERE ID=#{id}
    </select>
    
    <select id="nicknameCheck" parameterType="string" resultType="_int">
    	SELECT
    	 	COUNT(*)
    	 FROM MEMBER
    	WHERE NICKNAME=#{nickname}
    </select>
    
    <select id="emailCheck" parameterType="String" resultType="_int">
    	SELECT
    		COUNT(*)
    	 FROM MEMBER
    	WHERE EMAIL=#{email} 	
    </select>
    
    <!-- 아이디 찾기 -->
    <select id="findId" parameterType="String" resultType="String">
    	SELECT ID
    	  FROM MEMBER
    	 WHERE EMAIL=#{email}
     </select>
    
	 
	 <select id="getListCount" resultType="_int">
  		SELECT COUNT(*) FROM MEMBER
	 </select>
	 <!-- 회원정보 목록 -->
     <select id="selectList" parameterType="com.untoon.member.model.vo.MemberPage" resultMap="memberResultSet">
     	<![CDATA[
     	SELECT *
  		  FROM(SELECT ROWNUM RNUM, ID, NICKNAME, EMAIL, GENDER, USER_LV, BIRTHDAY ,PHONE, ENROLL_DATE, UPDATE_DATE
                 FROM(SELECT * FROM MEMBER
               WHERE M_STATUS='Y'
               ORDER BY ID DESC))
     	  WHERE RNUM >= #{ startRow } AND RNUM <= #{ endRow }		  			
     	 ]]> 
   </select>
  
  <!-- 아이디로 검색 -->
   <select id="getSearchWriterListCount" resultType="_int">
         SELECT COUNT(*) FROM MEMBER
         WHERE ID like '%' || #{ keyword } || '%'
   </select>
  
  <select id="searchWriter" parameterType="com.untoon.common.SearchAndPage" resultMap="memberResultSet">
     	<![CDATA[
     	SELECT *
  		  FROM(SELECT ROWNUM RNUM, ID, NICKNAME, EMAIL, GENDER, PHONE, ENROLL_DATE, UPDATE_DATE
                 FROM(SELECT * FROM MEMBER
               WHERE M_STATUS='Y' AND ID LIKE '%' || #{keyword} || '%'
               ORDER BY ID DESC))
     	  WHERE RNUM >= #{ startRow } AND RNUM <= #{ endRow }		  			
     	 ]]> 
   </select>
</mapper>

















