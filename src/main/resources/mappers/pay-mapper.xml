<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="payMapper">

	<resultMap id="payResultSet" type="Pay">
		<id property="payno" column="PAYNO"/>
		<result property="pid" column="PID"/>
		<result property="cid" column="CID"/>
		<result property="paydate" column="PAYDATE"/>
		<result property="method" column="METHOD"/>
		<result property="pstatus" column="PSTATUS"/>
	</resultMap>
	
	<resultMap id="payclssResultSet" type="PayClss">
		<id property="payno" column="PAYNO"/>
		<result property="pid" column="PID"/>
		<result property="cid" column="CID"/>
		<result property="paydate" column="PAYDATE"/>
		<result property="method" column="METHOD"/>
		<result property="pstatus" column="PSTATUS"/>
		<result property="clss_title" column="CLSS_TITLE"/>
		<result property="tchr_id" column="TCHR_ID"/>
		<result property="clss_price" column="CLSS_PRICE"/>
	</resultMap>
	
	<select id="payList" resultMap="payclssResultSet">
		select * from pay
		join clss using (cid)
		order by payno asc
	</select>
	
	<select id="detailPay" parameterType="_int" resultMap="payResultSet">
		select * from pay
		where payno = #{payno}
	</select>
	
	<select id="selectMyPay" parameterType="string" resultMap="payclssResultSet">
		select * from pay
		join clss using (cid)
		where pid = #{id}
	</select>
	
	<select id="MyPayDetail" parameterType="_int" resultMap="payResultSet"> <!-- where 조건에 쓸때는 매개변수가 있으므로 파라매터 타입을 쓰지만 where 조건에 쓰는 컬럼이 없을 때는 매개변수가 없으므로 파라매터 타입을 쓸 필요가 없다. -->
		select * from pay 
		where payno = #{payno}
	</select>
	
	<insert id="insertPay" parameterType="Pay"> <!-- 추가할 때 제목 내용 날짜 등등 컬럼값이 많으므로 컬럼값이 여러개 일때는 pay 객체에 담아서 전달하므로 파라매터타입이 pay이다. -->
		insert into pay
		values (seq_payno.nextval, #{pid}, #{cid}, default, #{method}, default )
	</insert>
	
	<update id="updatePay" parameterType="Pay">
		update pay
		set pstatus = #{pstatus}
		where payno = #{payno}
	</update>
</mapper>

















